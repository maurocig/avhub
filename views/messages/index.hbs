{{> nav}}

<main class="m-4 relative h-max">
	<section>
		<h1>Chatear con un representante</h1>
		<div class="container-chat">
			{{!-- <div id="container-form"></div> --}}
			<div id="container-chat"></div>

			<form id="chat-form">
				<input class="w-full mb-2 text-black" id="email-input" type="email" placeholder="E-mail" value="{{user.email}}"
					required>
				<textarea class="w-full mb-2 text-black" name="message" id="text-area-input" cols="30" rows="5"
					placeholder="Mensaje" required></textarea>
				<button type="submit" class="bg-green-600  px-4 py-2">Enviar</button>
			</form>
		</div>
	</section>
</main>

<script src="https://cdn.jsdelivr.net/npm/handlebars@latest/dist/handlebars.js"></script>
<script src="/socket.io/socket.io.js"></script>

<script>
	const socket = io();

	const form = document.querySelector('#chat-form');
	const chat = document.querySelector('#container-chat');

	async function render(file, obj, target) {
		// const data = await fetch(`http://localhost:8080/${file}`);
		const data = await fetch(`http://ecommerce-coderhouse.onrender.com/${file}`);
		const parsedData = await data.text();
		template = Handlebars.compile(parsedData);
		const html = await template(obj);
		target.innerHTML = html;
	}

	form.addEventListener('submit', (e) => {
		const emailInput = document.querySelector('#email-input');
		const messageInput = document.querySelector('#text-area-input');
		e.preventDefault();
		const newMessage = {
			email: emailInput.value,
			mode: 'user',
			body: messageInput.value,
		};
		socket.emit('new-message', newMessage);
		messageInput.value = '';
	});

	socket.on('messages', async (messages) => {
		await render('chat.hbs', { messages }, chat);
	});

</script>